Program parameters: /workspace/data/data.dat 10 None
---------------
Name: gdb10
Vertices: 12
Depot: 0
Required edges: 25
Non-required edges: 0
Vehicles: 4
Capacity: 10
Total cost: 252
Total edges got: 25
---------------
Demand:
[[0 1 0 1 2 0 0 1 2 1 2 0]
 [1 0 1 2 2 0 1 0 0 0 0 0]
 [0 1 0 2 0 0 0 2 1 0 0 0]
 [1 2 2 0 0 2 2 0 0 0 1 0]
 [2 2 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 2 1 0 0 0 0 0 2 0]
 [0 1 0 2 1 0 0 0 0 0 0 0]
 [1 0 2 0 0 0 0 0 2 0 0 1]
 [2 0 1 0 0 0 0 2 0 1 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 2]
 [2 0 0 1 0 2 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 0 2 1 0]]
Demand per point:
[10  7  6 10  6  5  4  6  6  4  6  4]
Total: 37
Shortest path:
[[ 0 11 10  7  9 15 14  9  4 13 12 14]
 [11  0 15 17  8 23  6 20 15 24 23 25]
 [10 15  0  8 19 18 19 18  6 23 21 23]
 [ 7 17  8  0 16 10 11 16 11 20 13 20]
 [ 9  8 19 16  0 15  5 18 13 22 18 23]
 [15 23 18 10 15  0 20 15 19 12  3 10]
 [14  6 19 11  5 20  0 23 18 27 23 28]
 [ 9 20 18 16 18 15 23  0 13  7 12  5]
 [ 4 15  6 11 13 19 18 13  0 17 16 18]
 [13 24 23 20 22 12 27  7 17  0  9  2]
 [12 23 21 13 18  3 23 12 16  9  0  7]
 [14 25 23 20 23 10 28  5 18  2  7  0]]
Rule: ps_rule1
[126, 10, [(0, 9), (9, 8), (8, 7), (7, 2), (2, 1), (1, 3), (3, 10)]]
[82, 10, [(0, 1), (1, 6), (6, 3), (3, 5), (5, 4), (4, 6), (4, 1)]]
[39, 5, [(0, 7), (7, 11), (11, 10), (10, 5)]]
[25, 4, [(0, 3), (3, 2), (2, 8)]]
[34, 4, [(0, 10), (11, 9)]]
[18, 2, [(0, 4)]]
[8, 2, [(0, 8)]]
Total cost: 332
Rule: ps_rule2
[52, 10, [(0, 8), (8, 2), (2, 3), (3, 5), (5, 10), (10, 11)]]
[88, 10, [(0, 4), (4, 1), (1, 6), (6, 4), (4, 5), (10, 3), (3, 6)]]
[73, 8, [(0, 10), (11, 9), (9, 8), (8, 7), (7, 11)]]
[67, 6, [(0, 3), (3, 1), (1, 2), (2, 7)]]
[18, 1, [(0, 7)]]
[22, 1, [(0, 1)]]
[26, 1, [(0, 9)]]
Total cost: 346
Rule: ps_rule3
[76, 10, [(0, 9), (9, 11), (11, 10), (10, 5), (5, 4), (4, 6), (6, 1), (1, 2)]]
[84, 9, [(0, 10), (10, 3), (3, 5), (3, 6), (4, 1)]]
[97, 10, [(0, 1), (1, 3), (3, 2), (2, 7), (7, 11), (9, 8), (8, 2)]]
[45, 4, [(0, 4), (8, 7)]]
[18, 1, [(0, 7)]]
[14, 1, [(0, 3)]]
[8, 2, [(0, 8)]]
Total cost: 342
Rule: ps_rule4
[77, 10, [(0, 8), (8, 7), (7, 2), (2, 8), (8, 9), (9, 11)]]
[86, 9, [(0, 3), (3, 2), (2, 1), (1, 3), (3, 10), (10, 11), (11, 7)]]
[68, 10, [(0, 4), (4, 1), (1, 6), (6, 3), (3, 5), (5, 4)]]
[18, 1, [(0, 7)]]
[52, 4, [(0, 1), (6, 4), (5, 10)]]
[24, 2, [(0, 10)]]
[26, 1, [(0, 9)]]
Total cost: 351
Rule: ps_rule5
[53, 10, [(0, 9), (9, 11), (11, 10), (10, 5), (5, 3), (3, 2)]]
[78, 10, [(0, 10), (10, 3), (3, 6), (6, 4), (4, 1), (1, 3)]]
[52, 3, [(0, 1), (1, 6), (4, 5)]]
[111, 10, [(0, 4), (1, 2), (2, 7), (7, 8), (8, 2), (8, 9), (11, 7)]]
[18, 1, [(0, 7)]]
[14, 1, [(0, 3)]]
[8, 2, [(0, 8)]]
Total cost: 334
Rule: ps_rule6
[102, 10, [(0, 9), (9, 8), (8, 2), (2, 3), (3, 1), (1, 4), (4, 5)]]
[85, 10, [(0, 8), (8, 7), (7, 11), (11, 9), (11, 10), (10, 3), (2, 1)]]
[45, 5, [(0, 3), (3, 6), (6, 4), (6, 1)]]
[60, 8, [(0, 10), (10, 5), (5, 3), (2, 7)]]
[22, 1, [(0, 1)]]
[18, 1, [(0, 7)]]
[18, 2, [(0, 4)]]
Total cost: 350
Initial solution:
[126, 10, [(0, 9), (9, 8), (8, 7), (7, 2), (2, 1), (1, 3), (3, 10)]]
[82, 10, [(0, 1), (1, 6), (6, 3), (3, 5), (5, 4), (4, 6), (4, 1)]]
[39, 5, [(0, 7), (7, 11), (11, 10), (10, 5)]]
[25, 4, [(0, 3), (3, 2), (2, 8)]]
[34, 4, [(0, 10), (11, 9)]]
[18, 2, [(0, 4)]]
[8, 2, [(0, 8)]]
Total cost:
332
Merged solution:
[-1, (0, 9), (9, 8), (8, 7), (7, 2), (2, 1), (1, 3), (3, 10), -1, (0, 1), (1, 6), (6, 3), (3, 5), (5, 4), (4, 6), (4, 1), -1, (0, 7), (7, 11), (11, 10), (10, 5), -1, (0, 3), (3, 2), (2, 8), -1, (0, 10), (11, 9), -1, (0, 4), -1, (0, 8), -1]
Length:
33
8712.0
0.7180000000000005 0.6480000000000005 1.0000000000000007
0.718 0.648 0.957
0.35385395005853876 0.3920789137994303 0.25406713614203086
Global feasible rate: 0.7622014084260931
Average positive deltaE: 25.631080499354283
Global positive deltaE prob: 0.7512765215719851
Global negative deltaE prob: 0.010924886854107327
Init temperature: 38.95292874020139
Before running: 1541411976.327271
Remaining time: 9.748889446258545
After running: 1541411976.7368608
Time elapsed: 0.4095897674560547
TEMPFACTOR: 0.8660236555192432
Expected iteration: 42
Init state: [-1, (0, 9), (9, 8), (8, 7), (7, 2), (2, 1), (1, 3), (3, 10), -1, (0, 1), (1, 6), (6, 3), (3, 5), (5, 4), (4, 6), (1, 4), -1, (0, 7), (7, 11), (11, 9), (11, 10), (10, 5), -1, (0, 3), (3, 2), (2, 8), -1, (0, 10), -1, (0, 4), -1, (0, 8), -1]
Init cost: 325
1 587 858 218 33.7341577407698 0.07686352729797363
2 592 910 218 29.214578602524238 0.07914257049560547
3 550 904 218 25.300516155812304 0.07927298545837402
4 552 837 218 21.910845487780243 0.07634401321411133
5 564 991 218 18.97531050484476 0.0835733413696289
6 577 910 218 16.433067768018354 0.08005619049072266
7 565 1003 218 14.231425419854705 0.08534955978393555
8 530 1080 218 12.324751065352052 0.08701515197753906
9 567 1343 218 10.67352597098087 0.09974479675292969
10 524 1451 218 9.243525978668433 0.10731816291809082
11 517 1539 218 8.005112157933526 0.10941338539123535
12 512 2081 218 6.93261649385513 0.13822126388549805
13 564 2331 218 6.003809878321419 0.14768385887145996
14 500 3658 218 5.199441377866457 0.2152245044708252
15 491 3698 218 4.50283922871792 0.2167670726776123
16 428 5757 218 3.8995652890697428 0.31299281120300293
17 326 8712 178 3.377115786576133 0.45329976081848145
18 372 8712 118 2.924662158602407 0.4320952892303467
19 340 8712 100 2.532826613751657 0.4409933090209961
20 321 8712 39 2.1934877628376364 0.4331376552581787
21 315 8712 32 1.8996122907093766 0.4310615062713623
22 312 8712 11 1.6451091800694178 0.42649126052856445
23 304 8712 23 1.4247034658519822 0.4124271869659424
24 304 8712 8 1.233826903528069 0.4116487503051758
25 304 8712 9 1.0685232852713669 0.4173004627227783
26 304 8712 4 0.9253664415181403 0.6319262981414795
27 304 8712 3 0.8013892283783739 0.42215442657470703
28 304 8712 0 0.694022029053985 0.42056798934936523
29 304 8712 2 0.6010394946122145 0.4198281764984131
30 304 8712 0 0.5205144202355085 0.4192979335784912
31 304 3560 0 0.45077780096283465 0.17209482192993164
Optimal solution:
[-1, -1, (4, 6), (1, 6), (6, 3), (3, 1), (1, 4), (4, 0), -1, (5, 3), (3, 2), (2, 1), (1, 0), -1, -1, (0, 8), (0, 9), (9, 8), (8, 7), (7, 2), (2, 8), -1, (0, 10), (10, 3), (3, 0), -1, (0, 7), (7, 11), (11, 9), (11, 10), (10, 5), (5, 4), -1]
Cost: 301
Optimization: 31
Relative: 9.33734939759036%
(True, [0, 72, 131, 131, 213, 249, 301])
Timestamp info:
Read data: 0.11176753044128418
Floyd: 0.0029442310333251953
Path scanning: 0.004251241683959961
Generate INITTEMP: 0.13214659690856934
Generate TEMPFACTOR: 0.40961742401123047
Simulated annealing: 8.339403867721558
Total time: 9.000198602676392
s 0,(5,7),(2,7),(7,4),(4,2),(2,5),(5,1),0,0,(6,4),(4,3),(3,2),(2,1),0,0,(1,9),(1,10),(10,9),(9,8),(8,3),(3,9),0,0,(1,11),(11,4),(4,1),0,0,(1,8),(8,12),(12,10),(12,11),(11,6),(6,5),0
q 301
